Wikipedia:Lua - Wikipedia
Jump to content
Main menu
Main menu
move to sidebar
hide
Navigation
Main pageContentsCurrent eventsRandom articleAbout WikipediaContact usDonate
Contribute
HelpLearn to editCommunity portalRecent changesUpload file
Languages
Language links are at the top of the page across from the title.
Search
Search
Create accountLog in
Personal tools
 Create account Log in
Pages for logged out editors learn more
ContributionsTalk
Contents
move to sidebar
hide
(Top)
1Running a module
Toggle Running a module subsection
1.1Using arguments
2Request a script
3History
4About Lua
5Unit testing
6MediaWiki-specific features
Toggle MediaWiki-specific features subsection
6.1Lua input limitations
6.2Wikitext
7Labeling converted templates
8See also
9Notes
Toggle the table of contents
Toggle the table of contents
Wikipedia:Lua
61 languages
Afrikaansالعربيةঅসমীয়াتۆرکجهবাংলাBân-lâm-gúभोजपुरीBikol CentralБългарскиCatalàČeštinaDanskDeutschDolnoserbskiEspañolEsperantoفارسیFrançaisGalegoગુજરાતી한국어HornjoserbsceHrvatskiIlokanoBahasa IndonesiaInterlinguaItalianoעבריתKurdîLatviešuMagyarमराठीBahasa Melayuမြန်မာဘာသာ日本語Norsk bokmålNorsk nynorskଓଡ଼ିଆOʻzbekcha / ўзбекчаਪੰਜਾਬੀPolskiPortuguêsRomânăРусскийसंस्कृतम्සිංහලسنڌيSlovenščinaکوردیСрпски / srpskiSrpskohrvatski / српскохрватскиSundaSuomiSvenskaไทยTürkçeУкраїнськаTiếng Việt吴语粵語中文
Edit links
Project pageTalk
English
ReadView sourceView history
Tools
Tools
move to sidebar
hide
Actions
ReadView sourceView history
General
What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationWikidata item
Print/export
Download as PDFPrintable version
In other projects
Wikimedia CommonsMediaWikiMultilingual WikisourceWiktionary
From Wikipedia, the free encyclopedia
Wikipedia project page for MediaWiki Lua modules
 WP:Lua (talk) Help To do Resources Reference manual 
Project subpages (mw:Lua – index at www.mediawiki.org)
Wikipedia information pageThis is an information page.It is not one of Wikipedia's policies or guidelines, but rather intends to describe some aspect(s) of Wikipedia's norms, customs, technicalities, or practices. It may reflect varying levels of consensus and vetting.
Wikipedia data structure
Namespaces
Subject namespaces
Talk namespaces
0
(Main/Article)
Talk
1
2
User
User talk
3
4
Wikipedia
Wikipedia talk
5
6
File
File talk
7
8
MediaWiki
MediaWiki talk
9
10
Template
Template talk
11
12
Help
Help talk
13
14
Category
Category talk
15
100
Portal
Portal talk
101
118
Draft
Draft talk
119
710
TimedText
TimedText talk
711
828
Module
Module talk
829
Deprecated
2300
Gadget
Gadget talk
2301
2302
Gadget definition
Gadget definition talk
2303
Not installed
90
Thread
Thread talk
91
92
Summary
Summary talk
93
108
Book
Book talk
109
442
Course
Course talk
443
444
Institution
Institution talk
445
446
Education Program
Education Program talk
447
2600
Topic
2601
Virtual namespaces
-1
Special
-2
Media
Current list (API call)
Lua is a programming language that is available via the Scribunto MediaWiki extension on the English Wikipedia. Since February 2013, Lua code can be embedded into wiki templates by employing the "{{#invoke:}}" functionality of Scribunto. This extension supports Lua 5.1 as of October 2022[update].
The Lua source code is stored in pages called modules (e.g., Module:Example). These individual modules are then invoked (by code {{#invoke:<Module name>|<Function name>|(optional) param1 | param2...}}). Example:
Wikitext
Result
{{#invoke:Example|hello}}
Hello World!
Running a module
Modules are run on normal wiki pages using the #invoke parser function. The syntax of #invoke is similar to template syntax, but with some differences. The most important difference is that you need to specify a function name. A function is a set of instructions that takes input values, processes them, and returns an output value.[1] This is much like what a template does: you give it arguments, it processes them, and you get a result. However, you can define many functions in one Lua module, whereas you can only define one template on one page.
Furthermore, you can't just run a Lua module directly – you can only run one of the module's functions. The module is just a container for the functions, and doesn't do anything by itself. So there are two reasons that we need to input a function name: we can't run a module by itself, and without specifying a function name, Lua will not know which function it is we want to run.
The simplest way to run a module from a wiki page is like this:
{{#invoke:module name|function name}}
For example, we can run Module:Example in this way, which has a function named "hello".
{{#invoke:Example|hello}} → Hello World!
Using arguments
Arguments are passed to modules in the same way that they are passed to templates. Note, however, that the text after the first pipe character is always the function name; the first positional argument is the text after the second pipe.
{{#invoke:module name|function name|first positional argument|second positional argument|named argument = value}}
In Module:Example, the "hello_to" function greets different people depending on the first positional argument. It works like this:
{{#invoke:Example|hello_to|Kate}} → Hello, Kate!
{{#invoke:Example|hello_to|Fred}} → Hello, Fred!
A third function in Module:Example, named "count_fruit", uses the named arguments bananas and apples to count the number of bananas and apples we have. It can be run like this:
{{#invoke:Example|count_fruit|apples=3|bananas=4}} → I have 4 bananas and 3 apples
{{#invoke:Example|count_fruit|bananas=5|apples=2}} → I have 5 bananas and 2 apples
Most modules have a documentation page explaining what arguments can be used and what their effects will be.
Request a script
Visit Wikipedia talk:Lua to request help in writing a Lua script to perform a specific task on Wikipedia or another Wikimedia Foundation project.
History
See also: Wikipedia:Before Lua
Sordid history. {{qif}}, ParserFunctions, Lua extension, wiki scripting language debated (JavaScript v. Lua), mw:Extension:WikiScripts, Tim writes Scribunto with initial support for Lua.
Discussed for years, Lua was installed in 2012 for testing on test2.wikipedia.org, with open invitation to all editors to experiment with developing Lua modules. Lua was installed on the English Wikipedia in February 2013, after testing on mediawiki.org and Wikimedia test wikis.
About Lua
See also Brad Jorsch's short presentation for a basic example of how to convert a wikitext template into a Lua module.
Lua is a scripting language which can be used to analyze data, calculate expressions, and format results using functions or object-oriented programming. Although some Lua scripts can be kept simple, for easy understanding, Lua allows complex structures including tables, dynamic functions, and associative arrays where index subscripts can be words as well as index numbers. Lua also supports recursion of re-nested functions, so care should be taken to avoid excessive complexity where other users would not understand how to maintain a Lua module. The following is the source code of the module used for the examples above.
local p = {};     --All Lua modules on Wikipedia must begin by defining a variable 
                    --that will hold their externally accessible functions.
                    --Such variables can have whatever name you want and may 
                    --also contain various data as well as functions.
p.hello = function( frame )     --Add a function to "p".  
                                        --Such functions are callable in Wikipedia
                                        --via the #invoke command.
                                        --"frame" will contain the data that Wikipedia
                                        --sends this function when it runs. 
                                 -- 'Hello' is a name of your choice. The same name needs to be referred to when the module is used.
    
    local str = "Hello World!"  --Declare a local variable and set it equal to
                                --"Hello World!".  
    
    return str    --This tells us to quit this function and send the information in
                  --"str" back to Wikipedia.
    
end  -- end of the function "hello"
function p.hello_to(frame)-- Add another function
local name = frame.args[1]  -- To access arguments passed to a module, use `frame.args`
    -- `frame.args[1]` refers to the first unnamed parameter
    -- given to the module
return "Hello, " .. name .. "!"  -- `..` concatenates strings. This will return a customized
 -- greeting depending on the name given, such as "Hello, Fred!"
end
function p.count_fruit(frame)
local num_bananas = tonumber(frame.args.bananas) or 0-- Named arguments ({{#invoke:Example|count_fruit|foo=bar}})
local num_apples = tonumber(frame.args.apples) or 0-- are likewise accessed by indexing `frame.args` by name (`frame.args["bananas"]`,
--  or equivalently `frame.args.bananas`.
local conj_bananas = num_bananas == 1 and 'banana' or 'bananas'
    local conj_apples = num_apples == 1 and 'apple' or 'apples'
    -- Ternary operators assign values based on a condition in a compact way.
-- Here, `conj_bananas` gets `'banana'` if `num_bananas` is 1, else `'bananas'`.
-- Similarly, `conj_apples` gets `'apple'` if `num_apples` is 1, else `'apples'`.
    
    return 'I have ' .. num_bananas ..  ' ' .. conj_bananas .. ' and ' .. num_apples .. ' ' .. conj_apples
   -- Like above, concatenate a bunch of strings together to produce
   -- a sentence based on the arguments given.
end
return p    --All modules end by returning the variable containing their functions to Wikipedia.
-- Now we can use this module by calling {{#invoke: Example | hello }},
-- {{#invoke: Example | hello_to | foo }}, or {{#invoke:Example|count_fruit|bananas=5|apples=6}}
-- Note that the first part of the invoke is the name of the Module's wikipage,
-- and the second part is the name of one of the functions attached to the 
-- variable that you returned.
-- The "print" function is not allowed in Wikipedia.  All output is accomplished
-- via strings "returned" to Wikipedia.
A sample of Lua is highlighted by tag "<syntaxhighlight lang="lua">...</syntaxhighlight>" placed around the Lua source code. To view some more complex examples of Lua, see article: "Lua (programming language)".
For instructions on how to use Lua within MediaWiki (and hence Wikipedia), see mw:Extension:Scribunto/Lua reference manual.
Unit testing
See also: Category:Modules for test tools
A few unit testing frameworks are available for Lua scripts on Wikipedia. These allow an editor to execute the module with a given set of inputs and verify that the expected outputs are produced. They are useful for rapidly detecting software regressions, where modifications to a script introduce new (or identify old) problems.
By convention, unit tests for a module like Module:Example are placed in Module:Example/testcases, and are executed on Module talk:Example/testcases.
Module:ScribuntoUnit and Module:UnitTests are widely used test frameworks. Category:Modules for test tools has a few other to review which may be interesting.
MediaWiki-specific features
Overall: Lua can only get input as text strings passed to the {{#invoke:}} and what can be fetched via mw.title.new(...):getContent() and frame:expandTemplate(). Lua output will not be preprocessed unless frame:preprocess() is explicitly called, meaning that template calls, parser functions, etc. in the output will not work correctly. Also, all Lua in the page is limited to 10 seconds CPU time (you can look in the source code of a rendered page to see how long a template or module took to parse). And relative to standard Lua, Scribunto's Lua lacks all sorts of functions (see mw:Extension:Scribunto/Lua reference manual § Differences from standard Lua).
Lua input limitations
Lua code in Scribunto is only run when the page is being parsed. Therefore, the only user input that Lua can receive is by page editing – it cannot create a box that calculates the square root of a number you type in, or recalculate a piece of the Mandelbrot set depending on which part of the parent set you click on. The input Lua can receive includes any transcludeable text page on Wikipedia. This does not include graphics files (not even .SVG files, although they are actually text, unless you cut and paste it onto a Wiki text page), the list of pages listed in a category, nor the contents of non-transcludeable special pages.
Wikitext
Transcluded Wikipedia headers frequently contain a hidden code such as "UNIQ5ae8f2aa414ff233-h-3--QINU" which may need to be stripped out in order for them to be parsed effectively.
Wikilinks using the pipe trick [[Wikipedia:Help| ]] won't work if returned as output – they need to be written explicitly as [[Wikipedia:Help|Help]]. Other pre-save transforms, such as replacing ~~~~ with signatures, will also fail to be processed. Template transclusions, parser function calls, and variable substitutions (i.e. anything with a {{...}}) will not be processed, nor will tags such as <ref> or <nowiki>. Use frame:extensionTag to add tags like <ref> or <syntaxhighlight> to output.
Labeling converted templates
This template  uses Lua:
Module:Example (sandbox)
Please place the {{lua}} template on the documentation subpage of all templates that use Lua. It will help to better communicate Lua usage and template conversions.
See also
Special:PrefixIndex/Module: – tracking of Lua modules can be done by using Special:PrefixIndex
Help:Lua debugging – a how-to guide about debugging Lua modules
Module:Sandbox provides a pseudo-namespace for experimenting with Lua modules
WP:Lua requests – requests for Lua-based templates or tasks
Category:Lua-based templates – groups of Lua-based templates
Category:Lua metamodules
Manual:Coding conventions/Lua – standards to improve the readability of code through consistency
mw:Extension:Scribunto/Lua reference manual and all Modules.
Wikipedia:Advanced template coding
Notes
^ You can also have multiple output values, but functions that do this are not normally meant to be accessed from wiki pages.
vteWikipedia technical helpGet personal technical help at the Teahouse, help desk, village pump (technical), talk pages or IRC.Generaltechnical help
Browser notes
Bypass cache
Keyboard shortcuts
Editing
CharInsert
Edit conflict
Edit toolbar
Reverting
How to create a page
IRC
Tutorial
Mobile access
Multilingual support
Page history
Page information
Page name
Help
Printing
Software notices
Editnotice
Special Characters
Entering
User access levels
VisualEditor
Help
Specialpage-related
Special page help
Edit filter
Emailing users
Logging in
Reset passwords
Logs
Moving a page
History merging
Non-admin and admin-only page moves
Notifications/Echo
FAQ
Page Curation
Page import
Pending changes
Random pages
Recent changes
Related changes
Searching
Linksearch
Tags
User contributions
Watchlist
What links here
Wikitext
Wikitext
Cheatsheet
Columns
Line-break handling
Lists
Magic words
For beginners
Conditional expressions
Switch parser function
Time function
Redirects
Sections and TOCs
Tables
Introduction
Basics
Advanced table formatting
Collapsing
Conditional tables
Sortable tables
Using colours
Links and diffs
Links
Interlanguage
Interwiki
Permanent
Diffs
Simplest diff guide
Simple diff and link guide
Complete diff and link guide
Colon trick
Link color
Pipe trick
URLs
Media files: images,videos and sounds
Media help
Files
Creation and usage
Moving files to Commons
Images
Introduction to images
Picture tutorial
Preparing images for upload
Uploading images
Options to hide an image
Extended image syntax
SVG help
Gallery tag
Graphics tutorials
Basic bitmap image editing
How to improve image quality
Graphics Lab resources
Sound file markup
Visual file markup
Other graphics
Family trees
Graphs and charts
How to create
Barcharts
To scale charts
Math formulas
Math symbols
Musical scores
Musical symbols
Timeline
EasyTimeline syntax
WikiHiero syntax
Templates andLua modules
Templates
Advanced template coding
Template documentation
Template index
Template limits
Template sandbox and test cases
Citation templates
Lua help
Lua project
Resources
To do
Substitution
Purge
Job queue
Transclusion
Labeled section
Costs and benefits
Guide to Scribbling
Data structure
Namespaces
Main/Article
Category
Draft
File
File description page
Help
Portal
Project/Wikipedia
Talk
Archiving
Simple
Template
User
User page design
MediaWiki
Bug reports and feature requests
TimedMediaHandler extension
Module
Special
HTML and CSS
Cascading Style Sheets
HTML in wikitext
Catalogue of CSS classes
Common.js and common.css
User CSS for monospaced coding font
Classes in microformats
Markup validation
Span tags
Useful styles
Customisationand tools
Preferences
Gadgets
Skins
Citation tools
Cleaning up vandalism tools
Customizing watchlists
Hide pages
IRC Scripts
User scripts
Guide
List
Techniques
User style
Tools
Alternative browsing
Browser tools
Editing tools
Navigation shortcuts
Optimum tool set
Wikimedia Cloud Services
Beta Features at MediaWiki
Automated editing
AfC helper script
AntiVandal
AutoWikiBrowser
Bots
Creating
history
HotCat
Huggle
Navigation popups
RedWarn
Twinkle
Ultraviolet
WPCleaner
Inactive
igloo
STiki
See also: Category:Wikipedia how-to
Category:Wikipedia information pagesFurther navigation at: Help pages
Administrators
Accessibility
Accounts
Bots
Referencing
Citation metadata
Templates
User scripts
Retrieved from "https://en.wikipedia.org/w/index.php?title=Wikipedia:Lua&oldid=1123278183"
Categories: Wikipedia information pagesWikipedia modulesHidden category: Wikipedia semi-protected project pages
 This page was last edited on 22 November 2022, at 21:29 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike License 4.0;
additional terms may apply.  By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policy
About Wikipedia
Disclaimers
Contact Wikipedia
Code of Conduct
Mobile view
Developers
Statistics
Cookie statement
Toggle limited content width