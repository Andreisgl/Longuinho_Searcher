Extension:CirrusSearch - MediaWiki
Jump to content
Main menu
Main menu
move to sidebar
hide
Navigation
Main pageGet MediaWikiGet extensionsTech blogContribute
Support
User helpFAQTechnical manualSupport deskCommunication
Development
Developer portalCode statistics
MediaWiki.org
Community portalRecent changesTranslate contentRandom pageVillage pumpSandbox
In other languages
Add links
Search
Search
 EnglishCreate accountLog in
Personal tools
 Create account Log in
Pages for logged out editors learn more
ContributionsTalk
Contents
move to sidebar
hide
Beginning
1Goals
2Dependencies
3Installation
Toggle Installation subsection
3.1Elastica 
3.2CirrusSearch
4Upgrading
5Configuration
6Hooks
7API
8See also
9Local development
Toggle the table of contents
Toggle the table of contents
Extension:CirrusSearch
Issue tracker: #cirrussearch
ExtensionDiscussion
English
ReadView sourceView history
Tools
Tools
move to sidebar
hide
Actions
ReadView sourceView history
General
What links hereRelated changesUpload fileSpecial pagesPermanent linkPage informationCite this pageWikidata item
Print/export
Create a bookDownload as PDFPrintable version
In other projects
Wikimedia Commons
From mediawiki.org
Translate this pageLanguages:Bahasa Indonesia
Deutsch
Deutsch (Sie-Form)
English
Türkçe
français
polski
português do Brasil
svenska
čeština
русский
हिन्दी
中文
日本語
MediaWiki extensions manual 
 CirrusSearch
Release status:  stable
Implementation 
Search, API , Hook 
Description 
Implements searching for MediaWiki using Elasticsearch
Author(s) 
Nik Everett, Chad Horohoe, Erik Bernhardson
Latest version 
continuous updates
Compatibility policy 
Snapshots releases along with MediaWiki. Master is not backward compatible.
MediaWiki 
>= 1.41.0
Composer 
mediawiki/cirrussearch
License 
GNU General Public License 2.0 or later
Download
Download extension Git [?]: 
Download Git master
browse repository (Phabricator · GitHub)
commit history
repository contributors (GitHub)
code reviewREADME
Help 
Help:Extension:CirrusSearch 
Parameters 
$wgCirrusSearchDeduplicateInQuery
$wgCirrusSearchLanguageWeight
$wgCirrusSearchAutomationCIDRs
$wgCirrusSearchUseIcuFolding
$wgCirrusSearchStemmedWeight
$wgCirrusSearchQueryStringMaxDeterminizedStates
$wgCirrusSearchCrossClusterSearch
$wgCirrusSearchExtraIndexSettings
$wgCirrusSearchAutomationUserAgentRegex
$wgCirrusSearchTalkNamespaceWeight
$wgCirrusSearchPrefixWeights
$wgCirrusSearchPrefixSearchRescoreProfile
$wgCirrusSearchDisableUpdate
$wgCirrusSearchActiveTest
$wgCirrusSearchExtraFieldsInSearchResults
$wgCirrusSearchMoreLikeThisMaxQueryTermsLimit
$wgCirrusSearchUseIcuTokenizer
$wgCirrusSearchCompletionBannedPageIds
$wgCirrusSearchOptimizeIndexForExperimentalHighlighter
$wgCirrusSearchRescoreProfiles
$wgCirrusSearchPhraseRescoreBoost
$wgCirrusSearchInterwikiProv
$wgCirrusSearchDefaultCluster
$wgCirrusSearchQueryStringMaxWildcards
$wgCirrusSearchElasticQuirks
$wgCirrusSearchMaxFileTextLength
$wgCirrusSearchFallbackProfiles
$wgCirrusSearchMoreLikeThisTTL
$wgCirrusSearchAllowLeadingWildcard
$wgCirrusSearchInterwikiPrefixOverrides
$wgCirrusSearchMaintenanceTimeout
$wgCirrusSearchReplicas
$wgCirrusSearchPhraseSlop
$wgCirrusSearchBoostOpening
$wgCirrusSearchWriteBackoffExponent
$wgCirrusSearchUserTesting
$wgCirrusSearchShardCount
$wgCirrusSearchUseCompletionSuggester
$wgCirrusSearchPhraseSuggestReverseField
$wgCirrusSearchFallbackProfile
$wgCirrusSearchFragmentSize
$wgCirrusSearchUnlinkedArticlesToUpdate
$wgCirrusSearchCustomPageFields
$wgCirrusSearchClientSideUpdateTimeout
$wgCirrusSearchIgnoreOnWikiBoostTemplates
$wgCirrusSearchRegexMaxDeterminizedStates
$wgCirrusSearchInterwikiHTTPConnectTimeout
$wgCirrusSearchExtraIndexes
$wgCirrusSearchCategoryDepth
$wgCirrusSearchMergeSettings
$wgCirrusSearchClusters
$wgCirrusSearchAllFields
$wgCirrusSearchBannedPlugins
$wgCirrusSearchMoreLikeThisConfig
$wgCirrusSearchClusterOverrides
$wgCirrusSearchCrossProjectBlockScorerProfiles
$wgCirrusSearchEnableIncomingLinkCounting
$wgCirrusSearchNearMatchWeight
$wgCirrusSearchWriteIsolateClusters
$wgCirrusSearchIndexedRedirects
$wgCirrusSearchIndexAllocation
$wgCirrusSearchNumCrossProjectSearchResults
$wgCirrusSearchLanguageDetectors
$wgCirrusSearchUpdateShardTimeout
$wgCirrusSearchEnableCrossProjectSearch
$wgCirrusSearchFullTextQueryBuilderProfiles
$wgCirrusSearchCompletionDefaultScore
$wgCirrusSearchWriteClusters
$wgCirrusSearchCompletionSuggesterHardLimit
$wgCirrusSearchRecycleCompletionSuggesterIndex
$wgCirrusSearchLogElasticRequests
$wgCirrusSearchConnectionAttempts
$wgCirrusSearchElasticaWritePartitionCounts
$wgCirrusSearchWikiToNameMap
$wgCirrusSearchMaxFullTextQueryLength
$wgCirrusSearchLogElasticRequestsSecret
$wgCirrusSearchDeduplicateInMemory
$wgCirrusSearchEnableRegex
$wgCirrusSearchClientSideSearchTimeout
$wgCirrusSearchUseEventBusBridge
$wgCirrusSearchDeduplicateAnalysis
$wgCirrusSearchWMFExtraFeatures
$wgCirrusSearchExtraBackendLatency
$wgCirrusSearchNamespaceMappings
$wgCirrusSearchNamespaceResolutionMethod
$wgCirrusSearchPreferRecentUnspecifiedDecayPortion
$wgCirrusSearchCategoryMax
$wgCirrusSearchDocumentSizeLimiterProfiles
$wgCirrusSearchSearchShardTimeout
$wgCirrusSearchCategoryEndpoint
$wgCirrusSearchPrivateClusters
$wgCirrusSearchSimilarityProfiles
$wgCirrusSearchCrossProjectShowMultimedia
$wgCirrusSearchWeights
$wgCirrusSearchPoolCounterKey
$wgCirrusSearchCompletionProfiles
$wgCirrusSearchMaxShardsPerNode
$wgCirrusSearchEnableArchive
$wgCirrusSearchIndexDeletes
$wgCirrusSearchSimilarityProfile
$wgCirrusSearchInterwikiThreshold
$wgCirrusSearchDocumentSizeLimiterProfile
$wgCirrusSearchFiletypeAliases
$wgCirrusSearchDevelOptions
$wgCirrusSearchBoostTemplates
$wgCirrusSearchPrefixSearchStartsWithAnyWord
$wgCirrusSearchUpdateConflictRetryCount
$wgCirrusSearchInterwikiHTTPTimeout
$wgCirrusSearchFetchConfigFromApi
$wgCirrusSearchPrefixIds
$wgCirrusSearchExtraIndexBoostTemplates
$wgCirrusSearchFullTextQueryBuilderProfile
$wgCirrusSearchStripQuestionMarks
$wgCirrusSearchIndexBaseName
$wgCirrusSearchMoreLikeThisFields
$wgCirrusSearchTextcatConfig
$wgCirrusSearchMasterTimeout
$wgCirrusSearchSanityCheck
$wgCirrusSearchTextcatModel
$wgCirrusSearchNamespaceWeights
$wgCirrusSearchCrossProjectOrder
$wgCirrusSearchRescoreProfile
$wgCirrusSearchRescoreFunctionChains
$wgCirrusSearchMoreAccurateScoringMode
$wgCirrusSearchMaxPhraseTokens
$wgCirrusSearchCrossProjectSearchBlockList
$wgCirrusSearchCrossProjectProfiles
$wgCirrusSearchLanguageToWikiMap
$wgCirrusSearchMaxIncategoryOptions
$wgCirrusSearchEnableAltLanguage
$wgCirrusSearchWikimediaExtraPlugin
$wgCirrusSearchCompletionSuggesterUseDefaultSort
$wgCirrusSearchLinkedArticlesToUpdate
$wgCirrusSearchCompletionSuggesterSubphrases
$wgCirrusSearchPreferRecentDefaultHalfLife
$wgCirrusSearchSlowSearch
$wgCirrusSearchFunctionRescoreWindowSize
$wgCirrusSearchEnablePhraseSuggest
$wgCirrusSearchCompletionSettings
$wgCirrusSearchUseExperimentalHighlighter
$wgCirrusSearchFeedbackLink
$wgCirrusSearchUpdateDelay
$wgCirrusSearchRefreshInterval
$wgCirrusSearchInterleaveConfig
$wgCirrusSearchPhraseRescoreWindowSize
$wgCirrusSearchMoreLikeThisAllowedFields
$wgCirrusSearchPreferRecentDefaultDecayPortion
$wgCirrusSearchClientSideConnectTimeout
$wgCirrusSearchPhraseSuggestUseText
$wgCirrusSearchPhraseSuggestProfiles
$wgCirrusSearchDefaultNamespaceWeight
$wgCirrusSearchInterwikiSources
$wgCirrusSearchPhraseSuggestUseOpeningText
$wgCirrusSearchICUNormalizationUnicodeSetFilter
$wgCirrusSearchICUFoldingUnicodeSetFilter
$wgCirrusSearchReplicaGroup
Hooks used 
APIAfterExecute APIQuerySiteInfoStatisticsInfo ApiBeforeMain ArticleRevisionVisibilitySet BeforeInitialize CirrusSearchAddQueryFeatures CirrusSearchAnalysisConfig CirrusSearchSimilarityConfig GetPreferences LinksUpdateComplete PageDelete PageDeleteComplete PageMoveComplete PageUndeleteComplete PrefixSearchExtractNamespace ResourceLoaderGetConfigVars SearchGetNearMatch SearchIndexFields ShowSearchHitTitle SoftwareInfo SpecialSearchResults SpecialSearchResultsAppend SpecialStatsAddExtra TitleMove UploadComplete UserGetDefaultOptions 
Hooks provided 
CirrusSearchAddQueryFeatures CirrusSearchAnalysisConfig CirrusSearchBuildDocumentFinishBatch CirrusSearchBuildDocumentLinks CirrusSearchBuildDocumentParse CirrusSearchFulltextQueryBuilder CirrusSearchFulltextQueryBuilderComplete CirrusSearchMappingConfig CirrusSearchProfileService CirrusSearchRegisterFullTextQueryClassifiers CirrusSearchScoreBuilder 
Quarterly downloads
503 (Ranked 13th)
Public wikis using
1,226 (Ranked 212nd)
Translate the CirrusSearch extension if it is available at translatewiki.net
Vagrant role 
cirrussearch
Issues 
Open tasks · Report a bug
The CirrusSearch extension implements searching for MediaWiki using Elasticsearch.
Elastic Search is a standalone third-party software that must be installed in advance.
It's a database system that provides search and indexing functionality, and where the current text of all pages of your wiki will be indexed for faster search results.
The communication between MediaWiki and ElasticSearch is done through web services. 
This page is for installation.
After the install is working, see Help:CirrusSearch  for usage.
Goals
No native dependencies that would make this difficult to install
The only dependencies are pure-PHP MediaWiki extensions and Elasticsearch itself
Provide a near-real-time search index for wiki pages that's extendable by other MediaWiki extensions
Provide all of the query options MWSearch  has given users, and more
Dependencies
PHP and cURL
In addition to the standard MediaWiki requirements for PHP, CirrusSearch requires PHP to be compiled with cURL support.
Note that Elasticsearch versions prior to 6.8 are not compatible with PHP 8.
 Elasticsearch
You will need to install Elasticsearch.
Every version of ElasticSearch change how web services work, and cause compatibility problems.
You must install the version of Elastic Search compatible with the version of MediaWiki you are currently using:
MediaWiki 1.29.x - 1.30.x require Elasticsearch 5.3.x - 5.4.x.
MediaWiki 1.31.x - 1.32.x require Elasticsearch 5.5.x - 5.6.x.
MediaWiki 1.33.x - 1.38.x require Elasticsearch 6.5.x - 6.8.x. (6.8.23+ recommended)
MediaWiki 1.39+ require Elasticsearch 7.10.2 (6.8.23+ is possible using a compatibility layer )
Take note that a Java installation like OpenJDK is needed in addition.
It's best to use the official Elasticsearch Docker image or a self-hosted version.
A managed product like Amazon OpenSearch (formerly Amazon Elasticsearch) can work but may require additional configuration depending on its specifics.
For example, Amazon OpenSearch only listens for Elasticsearch API requests over HTTPS on port 443 (i.e. it does not expose the default Elasticsearch port 9200), so a TLS-enabled proxy (e.g. Nginx) can enable CirrusSearch to communicate with an Amazon OpenSearch cluster.
Elastica 
Elastica is a PHP library to talk to Elasticsearch. Install Elastica per the instructions below.
Other
Due to the actual handling of jobs by the CirrusSearch extension, it is advisable to set up jobs in Redis to prevent messages like Notice: unserialize(): Error at offset 64870 of 65535 bytes in JobQueueDB.php and subsequent errors like Unsupported operand types. See task T157759.
Installation
Elastica 
Even though the instructions below tell you to only run Composer when installing from git, it may be necessary to issue it anyway in order to install all PHP dependencies.
Download and place the file(s) in a directory called Elastica in your extensions/ folder.
Only when installing from Git, run Composer to install PHP dependencies, by issuing composer install --no-dev in the extension directory. (See task T173141 for potential complications.)
Add the following code at the bottom of your LocalSettings.php  file: wfLoadExtension( 'Elastica' );
 Done – Navigate to Special:Version on your wiki to verify that the extension is successfully installed.
CirrusSearch
Download and place the file(s) in a directory called CirrusSearch in your extensions/ folder.
Only when installing from Git, run Composer to install PHP dependencies, by issuing composer install --no-dev in the extension directory. (See task T173141 for potential complications.)
Add the following code at the bottom of your LocalSettings.php  file: wfLoadExtension( 'CirrusSearch' );
Now follow the setup instructions in the CirrusSearch README delivered with your extension i.e. $IP/extensions/CirrusSearch/README. Note that all info in it might not apply to your version of the extension, especially the version of Elasticsearch supported.
Configure as required.
 Done – Navigate to Special:Version on your wiki to verify that the extension is successfully installed.
Upgrading
Please follow the upgrade instructions in the CirrusSearch UPGRADE file.
Configuration
The configuration parameters of CirrusSearch are documented at the "settings.txt" file.
See also documentation on CirrusSearch configuration profiles.
Elasticsearch will fail to index for CirrusSearch if one is using a database name for MySQL which contains a capital character, e.g. "MyWikiDatabaseName". To mitigate this CirrusSearch provides the $wgCirrusSearchIndexBaseName configuration parameter which one needs to set, e.g. $wgCirrusSearchIndexBaseName = 'mywikidatabasename';.
Hooks
CirrusSearch extension defines a number of hooks that other extensions can make use of to extend the core schema and modify documents.
The following hooks are available:
CirrusSearchAnalysisConfig  - allows to hook into the configuration for analysis
CirrusSearchMappingConfig  - allows configuration of the mapping of fields
CirrusSearchBuildDocumentParse  - allows extensions to modify ElasticSearch document produced from a page
CirrusSearchBuildDocumentLinks  - allows extensions to process incoming and outgoing links for the document
CirrusSearchBuildDocumentFinishBatch  - called when a batch of pages has been indexed
CirrusSearchAddQueryFeatures  - allows extensions to add query parser features
CirrusSearchScoreBuilder  - allows extensions to define rescore builder functions
CirrusSearchProfileService  - allows extension to declare various search components and configuration
API
CirrusSearch features can be used in API queries.
Searching happens via the normal search API, action=query&list=search; you can use CirrusSearch-specific features, such as the morelike: special prefix to find pages related to Marie Curie and radium: api.php?action=query&list=search&srsearch=morelike:Marie_Curie%7Cradium&srlimit=10&srprop=size&formatversion=2
Custom APIs and parameters are provided for querying CirrusSearch configuration and debug information:
action=cirrusdump module: 2014?action=cirrusdump
cirrusDumpQuery parameter to Special:Search or search API queries: https://en.wikipedia.org/wiki/Special:Search/cat%20dog%20chicken?cirrusDumpQuery
cirrusDumpResult parameter to Special:Search or search API queries: https://en.wikipedia.org/wiki/Special:Search/cat%20dog%20chicken?cirrusDumpResult
An additional parameter, cirrusExplain, can be passed with cirrusDumpResult to have the Lucene explanation of the score included with the result dump: https://en.wikipedia.org/wiki/Special:Search/cat%20dog%20chicken?cirrusDumpResult&cirrusExplain It can also be used to get the explanation in a human-readable format, by giving it one of the values verbose, pretty or hot, such as: https://en.wikipedia.org/wiki/Special:Search/cat%20dog%20chicken?cirrusDumpResult&cirrusExplain=pretty
cirrus-config-dump, cirrus-settings-dump, cirrus-mapping-dump, cirrus-profiles-dump modules to obtain dump from the CirrusSearch setup: api.php?action=cirrus-config-dump&formatversion=2
See also
General links
Usage help page  - CirrusSearch usage documentation (needed after the install)
Project page 
Info about Wikimedia Cirrus/Elastic setup
Configuration help page  - sets of tunable parameters that influence various aspect of the indexing
Extension:WikiSearch  - provides faceted search API for Semantic MediaWiki using ElasticSearch.
Extension:AdvancedSearch  - Enhances Special:Search by providing advanced parameters
Debugging
How to determine that Cirrus is actually used as the search backend
Local development
Elastic Search service can be run with the Vagrant role (cirrussearch) and MediaWiki Vagrant.
For Docker, you can use a command like docker run -d --name elasticsearch -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" elasticsearch:6.8.2.
Then follow the installation and configuration directions.
If your web host is in a container you'll want to make sure the above container is on the same network, and in LocalSettings.php you will want to reference elasticsearch as the host name.
This will not have the WMF plugins but can be sufficient for basic testing.
This extension is being used on one or more Wikimedia projects. This probably means that the extension is stable and works well enough to be used by such high-traffic websites. Look for this extension's name in Wikimedia's CommonSettings.php and InitialiseSettings.php configuration files to see where it's installed. A full list of the extensions installed on a particular wiki can be seen on the wiki's Special:Version page.
This extension is included in the following wiki farms/hosts and/or packages: 
Canasta 
MyWikis
semantic::core
wiki.gg
WikiForge
WikiTide
This is not an authoritative list. Some wiki farms/hosts and/or packages may contain this extension even if they are not listed here. Always check with your wiki farms/hosts or bundle to confirm.
Retrieved from "https://www.mediawiki.org/w/index.php?title=Extension:CirrusSearch&oldid=6063049"
Categories: Stable extensionsSearch extensionsAPI extensionsHook extensionsExtensions supporting ComposerGPL licensed extensionsExtensions in Wikimedia version controlAPIAfterExecute extensionsAPIQuerySiteInfoStatisticsInfo extensionsApiBeforeMain extensionsArticleRevisionVisibilitySet extensionsBeforeInitialize extensionsCirrusSearchAddQueryFeatures extensionsCirrusSearchAnalysisConfig extensionsCirrusSearchSimilarityConfig extensionsGetPreferences extensionsLinksUpdateComplete extensionsPageDelete extensionsPageDeleteComplete extensionsPageMoveComplete extensionsPageUndeleteComplete extensionsPrefixSearchExtractNamespace extensionsResourceLoaderGetConfigVars extensionsSearchGetNearMatch extensionsSearchIndexFields extensionsShowSearchHitTitle extensionsSoftwareInfo extensionsSpecialSearchResults extensionsSpecialSearchResultsAppend extensionsSpecialStatsAddExtra extensionsTitleMove extensionsUploadComplete extensionsUserGetDefaultOptions extensionsAll extensionsExtensions requiring Composer with gitExtensions used on WikimediaExtensions included in CanastaExtensions included in MyWikisExtensions included in semantic::coreExtensions included in wiki.ggExtensions included in WikiForgeExtensions included in WikiTideDiscoverySearchHidden categories: Extensions without an imageExtensions with release branches compatibility policy
 This page was last edited on 9 August 2023, at 04:54.
Text is available under the Creative Commons Attribution-ShareAlike License;
additional terms may apply.
See Terms of Use for details.
Privacy policy
About MediaWiki.org
Disclaimers
Code of Conduct
Mobile view
Developers
Statistics
Cookie statement
Toggle limited content width